template:
  name: verify resource script
  type: Step
  projectIdentifier: Snowflake
  orgIdentifier: default
  spec:
    type: ShellScript
    spec:
      shell: Bash
      executionTarget: {}
      source:
        type: Inline
        spec:
          script: |-
            name="<+pipelines.stages.Create_non_prod_env.identifier>"

            # Check if env_name variable is set to "prod"
            if [ "<+env.name>" == "prod" ]; then
                name="<+pipelines.stages.clone_non_prod_to_prod.identifier>"
            fi
            
            echo "Executing SQL queries"
            cat <+pipeline.stages.$name.spec.execution.steps.Fetch_Queries.output.outputVariables.verify_sql>
            
            snowsql -c connection -f <+pipeline.stages.$name.spec.execution.steps.Fetch_Queries.output.outputVariables.verify_sql>
      environmentVariables: []
      outputVariables: []
      delegateSelectors: []
    timeout: 10m
  identifier: verify_resource_script
  versionLabel: v1
